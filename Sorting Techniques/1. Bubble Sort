Bubble sort also called as sinking sort, compares each pair of adjacent items and swaps them if they are in wrong order
the list is repeated until no swaps are needed and which indicates that list is sorted.

If there are 5 elements then N-1 i.e 4 rounds will be required to completely sort the array

------
Sorting Array:

//Main.java

class Main{
    public static void main (String[] args) {
        int[] a = {36, 19, 29, 12, 5};
        int temp = 0;
        for(int i=0;  i<a.length; i++)
        {
            int flag = 0;
            for(int j=0;  j<a.length-1-i; j++)
            {
                if(a[j]>a[j+1])
                {
                    temp = a[j];
                    a[j] = a[j+1];
                    a[j+1] = temp;
                    flag = 1;
                }
            }
            if(flag == 0)
            {
                break;
            }
        }
        for(int i=0; i<a.length; i++)
        {
            System.out.print(a[i]+" ");
        }
    }
}

o/p:
5 12 19 29 36 

------
Sorting Strings:

//Main.java

class Main{
    public static void main (String[] args) {
        String[] a = {"tomato", "Suhas", "potato"};  //sorting will be done based on unicode values
        String temp;
        for(int i=0;  i<a.length; i++)
        {
            int flag = 0;
            for(int j=0;  j<a.length-1-i; j++)
            {
                if(a[j].compareTo(a[j+1])>0)
                {
                    temp = a[j];
                    a[j] = a[j+1];
                    a[j+1] = temp;
                    flag = 1;
                }
            }
            if(flag == 0)
            {
                break;
            }
        }
        for(int i=0; i<a.length; i++)
        {
            System.out.print(a[i]+" ");
        }
    }
}

o/p:
Suhas potato tomato 






