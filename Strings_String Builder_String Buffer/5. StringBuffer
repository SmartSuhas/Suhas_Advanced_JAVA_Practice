Main difference between String and StringBuffer:

- String is Immutable: Once String is created, we cannot change value of that String object.
- String is Mutable/Modifiable: Once StringBuffer is created, we can change value of that StringBuffer object.

So, Java StringBuffer class is used to create mutable (modifiable) String objects and the length is also growable.

------------------------------------------------------------------------------------------------------
Declaration: StringBuffer sb = new StringBuffer();

StringBuffer Constructors:

1. StringBuffer() - It creates an empty String buffer with the initial capacity of 16.

2. StringBuffer(String str) - It creates a String buffer with the specified string.
                              The capacity is 16 plus the length of the string argument

3. StringBuffer(int capacity) - It creates an empty String buffer with the specified capacity as length.

4. StringBuffer(CharSequence seq) - Creates a StringBuffer with the characters in the specified CharSequence.
                                    The capacity is 16 plus the length of the characters in the argument

-------------------------------------------------------------------------------------------------------
StringBuffer methods:  https://www.tutorialcup.com/java/stringbuffer-java.htm

-------------------------------------------------------------------------------------------------------
String comparision vs StringBuffer comparision:

import java.util.*;
class Main {
  public static void main(String[] args) 
  {
      StringBuffer sb1 = new StringBuffer("suhas");
      StringBuffer sb2 = new StringBuffer("suhas");
      System.out.println(sb1==sb2);         //reference comparision
      System.out.println(sb1.equals(sb2));  /* The equals() method of StringBuffer is not overridden from Object but implements Comparable,
                                               so it will compare reference equality i.e. the same as using == */
      
      System.out.println();
      
      String s1 = new String("suhas");
      String s2 = new String("suhas");
      System.out.println(s1==s2);          //reference comparision
      System.out.println(s1.equals(s2));   //content comparision
  }
}

o/p:
false
false

false
true

-------------------------------------------------------------------------------------------------------
