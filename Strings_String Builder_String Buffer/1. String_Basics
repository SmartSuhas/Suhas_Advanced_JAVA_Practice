1. It's non-primitive data type, size isn't fixed
2. sequence of characters or array of characters
3. String class is final (i.e it cannot be extended)
4. Strings are immutable (i.e original value of strings cannot be changed)

There are 3 classes to create Strings
1. String
2. StringBuffer
3. StringBuilder

------

String constant pool(String literal pool):
- It's an area in heap memory where JAVA stores String literal values

------

String Declaraction and initialization:

1. String s = "Suhas";
2. String s = new String("Suhas");

------
Suppose, we have these two strings:

String str1 = "xyz";  
String str2 = "xyz";

Since both str1 and str2 have the same contents, both these strings will share the same memory. Java automatically interns the string literals.

However, if you create strings with using the new keyword, these strings won't share the same memory. For example,

class Main {
  public static void main(String[] args) {

    String str1 = new String("xyz");
    String str2 = new String("xyz");


    System.out.println(str1 == str2); // false

  }
}

As you can see from this example, both str1 and str2 have the same content. However, they are not equal because they don't share the same memory.


